{"version":3,"sources":["actions/index.js","components/BlockEntry.js","components/BlockView.js","containers/Block.js","components/Blockchain.js","components/AppView.js","containers/App.js","util/eos-client.js","reducers/index.js","index.js","config.js"],"names":["requestBlocks","type","receivedBlock","block","doneBlocks","receivedDetail","blockId","actionIdx","contract","setTotalBlocks","totalBlocks","BlockEntry","props","label","value","onClick","labelElem","className","valueElem","BlockView","key","actionBlocks","actions","map","action","name","account","dangerouslySetInnerHTML","__html","hideDetailsLink","details","id","timestamp","length","showDetails","md","MarkdownIt","renderContract","data","render","Mustache","err","console","log","populateDetails","dispatch","eosClient","a","isFetchingDetails","i","getAbi","abi","contracts","renderedContract","connect","state","ownProps","blocksById","Blockchain","blocks","isLoading","rows","Block","spinner","alt","src","AppView","isFetchingBlocks","loadData","disabled","onChange","App","prevBlock","getPrevBlock","event","target","this","prevProps","Component","EosClient","args","previous","getInfo","info","head_block_id","getBlock","_processBlock","_retry","rpc","get_info","get_block","abiCache","get_abi","forEach","ricardian_contract","transactions","t","trx","transaction","push","_wait","ms","Promise","resolve","setTimeout","fun","numRetries","resource","maxRetries","retryDelay","defaults","apiUrl","Object","assign","JsonRpc","initialState","reducer","oldBlock","oldActions","newAction","slice","store","createStore","document","getElementById"],"mappings":"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","file":"static/js/main.686afcea.chunk.js","sourcesContent":["export const RECEIVED_BLOCK = 'RECEIVED_BLOCK';\nexport const REQUEST_BLOCKS = 'REQUEST_BLOCKS';\nexport const DONE_FETCHING_BLOCKS = 'DONE_FETCHING_BLOCKS';\nexport const REQUEST_DETAILS = 'REQUEST_DETAILS';\nexport const RECEIVED_DETAIL = 'RECEIVED_DETAIL';\nexport const TOGGLE_DETAILS = 'TOGGLE_DETAILS';\nexport const SET_TOTAL_BLOCKS = 'SET_TOTAL_BLOCKS';\n\nexport const requestBlocks = () => ({\n  type: REQUEST_BLOCKS,\n});\n\nexport const receivedBlock = (block) => ({\n  type: RECEIVED_BLOCK,\n  block,\n});\n\nexport const doneBlocks = () => ({\n  type: DONE_FETCHING_BLOCKS,\n});\n\nexport const requestDetails = (blockId) => ({\n  type: REQUEST_DETAILS,\n  blockId,\n});\n\nexport const receivedDetail = (blockId, actionIdx, contract) => ({\n  type: RECEIVED_DETAIL,\n  blockId,\n  actionIdx,\n  contract,\n});\n\nexport const toggleDetails = (blockId) => ({\n  type: TOGGLE_DETAILS,\n  blockId,\n});\n\nexport const setTotalBlocks = (totalBlocks) => ({\n  type: SET_TOTAL_BLOCKS,\n  totalBlocks,\n});\n","import React from 'react';\n\nfunction BlockEntry(props) {\n  const { label, value, onClick } = props;\n  let labelElem = (\n    <span className=\"eos-label\">\n      {label}\n      :\n    </span>\n  );\n  let valueElem = (\n    <span className=\"eos-value\">\n      {value}\n    </span>\n  );\n  if (onClick) {\n    labelElem = (\n      <button type=\"button\" className=\"link-button\" onClick={onClick}>\n        {labelElem}\n      </button>\n    );\n    valueElem = (\n      <button type=\"button\" className=\"link-button\" onClick={onClick}>\n        {valueElem}\n      </button>\n    );\n  }\n  return (\n    <div>\n      <div className=\"eos-label\">{labelElem}</div>\n      {valueElem}\n    </div>\n  );\n}\n\nexport default BlockEntry;\n","import React from 'react';\nimport BlockEntry from './BlockEntry';\n\nfunction BlockView(props) {\n  const { block, onClick } = props;\n\n  let key = 0;\n  const actionBlocks = block.actions.map((action) => (\n    <div className=\"eos-block\" key={++key}>\n      <BlockEntry label=\"action\" value={action.name} />\n      <BlockEntry label=\"account\" value={action.account} />\n      <BlockEntry label=\"contract\" />\n      <div className=\"contract\" dangerouslySetInnerHTML={{ __html: action.contract }} />\n    </div>\n  ));\n\n  const hideDetailsLink = (\n    <button type=\"button\" className=\"link-button\" onClick={() => onClick(block)}>\n      hide actions\n    </button>\n  );\n\n  const details = (\n    <div className=\"eos-details\">\n      {hideDetailsLink}\n      {actionBlocks}\n      {hideDetailsLink}\n    </div>\n  );\n\n  return (\n    <div>\n      <div className=\"eos-block\">\n        <BlockEntry label=\"hash\" value={block.id} />\n        <BlockEntry label=\"timestamp\" value={block.timestamp} />\n        <BlockEntry label=\"actions\" value={block.actions.length} onClick={() => onClick(block)} />\n      </div>\n      {block.showDetails && details}\n      <hr />\n    </div>\n  );\n}\n\nexport default BlockView;\n","import { connect } from 'react-redux';\nimport Mustache from 'mustache';\nimport MarkdownIt from 'markdown-it';\nimport { receivedDetail, requestDetails, toggleDetails } from '../actions';\nimport BlockView from '../components/BlockView';\n\nconst md = new MarkdownIt();\n\nconst renderContract = (contract, data) => {\n  try {\n    return md.render(Mustache.render(contract, data));\n  } catch (err) {\n    console.log('ERROR: failed to render contract');\n    console.log(err);\n    return '';\n  }\n};\n\nconst populateDetails = async (block, dispatch, eosClient) => {\n  const { actions, isFetchingDetails } = block;\n  if (isFetchingDetails) return;\n\n  dispatch(requestDetails(block.id));\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i];\n    if (action.contract) continue;\n    const abi = await eosClient.getAbi(action.account);\n    const contract = abi.contracts[action.name];\n    if (contract) {\n      action.contract = renderContract(contract, action.data);\n      const renderedContract = renderContract(contract, action.data);\n      dispatch(receivedDetail(block.id, i, renderedContract));\n    }\n  }\n};\n\nconst onClick = (block, dispatch, eosClient) => {\n  if (!block.showDetails) {\n    populateDetails(block, dispatch, eosClient);\n  }\n  dispatch(toggleDetails(block.id));\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const { blocksById, isFetchingDetails } = state;\n  const { block } = ownProps;\n  return {\n    block: blocksById[block.id],\n    isFetchingDetails,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  onClick: (block) => onClick(block, dispatch, ownProps.eosClient),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockView);\n","import React from 'react';\nimport Block from '../containers/Block';\n\nfunction Blockchain(props) {\n  const { blocks, blocksById, totalBlocks, eosClient } = props;\n  const isLoading = blocks.length < totalBlocks;\n  const rows = blocks.map((id) => (\n    <Block block={blocksById[id]} key={id} eosClient={eosClient} />\n  ));\n\n  const spinner = (\n    <div className=\"spinner-container\">\n      <img alt=\"spinner\" className=\"spinner\" src=\"spinner.gif\" />\n    </div>\n  );\n\n  return (\n    <div className=\"eos-blockchain\">\n      <hr />\n      <div>\n        {rows}\n      </div>\n      {isLoading && spinner}\n    </div>\n  );\n}\n\nexport default Blockchain;\n","import React from 'react';\nimport Blockchain from './Blockchain';\n\nfunction AppView(props) {\n  const {\n    blocks,\n    blocksById,\n    eosClient,\n    isFetchingBlocks,\n    loadData,\n    setTotalBlocks,\n    totalBlocks,\n  } = props;\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"app-title\">EOSIO Blockchain</h1>\n      <button\n        type=\"button\"\n        className=\"button\"\n        onClick={loadData}\n        disabled={isFetchingBlocks}\n      >\n        LOAD\n      </button>\n      <select\n        value={totalBlocks}\n        onChange={setTotalBlocks}\n        disabled={isFetchingBlocks}\n        className=\"load\"\n      >\n        <option value=\"1\">1</option>\n        <option value=\"2\">2</option>\n        <option value=\"5\">5</option>\n        <option value=\"10\">10</option>\n        <option value=\"15\">15</option>\n        <option value=\"20\">20</option>\n        <option value=\"25\">25</option>\n      </select>\n      blocks\n\n      <Blockchain\n        blocks={blocks}\n        blocksById={blocksById}\n        totalBlocks={totalBlocks}\n        eosClient={eosClient}\n      />\n\n    </div>\n  );\n}\n\nexport default AppView;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { doneBlocks, receivedBlock, requestBlocks, setTotalBlocks } from '../actions';\nimport AppView from '../components/AppView';\n\nclass App extends Component {\n  componentDidMount() {\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.totalBlocks !== this.props.totalBlocks) {\n      this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    const { dispatch, isFetchingBlocks, totalBlocks, eosClient } = this.props;\n    if (isFetchingBlocks) return;\n\n    let prevBlock;\n    dispatch(requestBlocks());\n    for (let i = 0; i < totalBlocks; i++) {\n      const block = prevBlock;\n      prevBlock = await eosClient.getPrevBlock(block);\n      dispatch(receivedBlock(prevBlock));\n    }\n    dispatch(doneBlocks());\n  };\n\n  setTotalBlocks = (event) => {\n    const { dispatch } = this.props;\n    dispatch(setTotalBlocks(event.target.value));\n  };\n\n  render() {\n    const { blocks, blocksById, totalBlocks, isFetchingBlocks, eosClient } = this.props;\n    return (\n      <AppView\n        blocks={blocks}\n        blocksById={blocksById}\n        eosClient={eosClient}\n        isFetchingBlocks={isFetchingBlocks}\n        loadData={this.loadData}\n        setTotalBlocks={this.setTotalBlocks}\n        totalBlocks={totalBlocks}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => state;\n\nexport default connect(mapStateToProps)(App);\n","import { JsonRpc } from 'eosjs';\n\nclass EosClient {\n  constructor(args = {}) {\n    const defaults = {\n      apiUrl: 'https://api.eosnewyork.io',\n      abiCache: {},\n      retryDelay: 1000,\n      maxRetries: 10,\n    };\n    Object.assign(this, defaults, args);\n\n    if (!this.rpc) {\n      this.rpc = new JsonRpc(this.apiUrl);\n    }\n  }\n\n  getPrevBlock = async (block) => {\n    let blockId;\n    if (block) {\n      blockId = block.previous;\n    } else {\n      const info = await this.getInfo();\n      blockId = info.head_block_id;\n    }\n    const prevBlock = await this.getBlock(blockId);\n    prevBlock.actions = [];\n    this._processBlock(prevBlock);\n    return prevBlock;\n  }\n\n  getInfo = async () => this._retry(() => this.rpc.get_info());\n\n  getBlock = async (blockId) => this._retry(() => this.rpc.get_block(blockId));\n\n  getAbi = async (account) => {\n    if (this.abiCache[account]) return this.abiCache[account];\n    const abi = await this._retry(async () => this.rpc.get_abi(account));\n    abi.contracts = {};\n    if (abi.abi) {\n      abi.abi.actions.forEach((action) => {\n        abi.contracts[action.name] = action.ricardian_contract;\n      });\n    }\n    this.abiCache[account] = abi;\n    return abi;\n  };\n\n  _processBlock = (block) => {\n    block.actions = [];\n    block.transactions.forEach((t) => {\n      if (typeof t.trx === 'object') {\n        const { actions } = t.trx.transaction;\n        block.actions.push(...actions);\n      }\n    });\n  };\n\n  _wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n  _retry = async (fun) => {\n    let numRetries = 0;\n    let resource;\n    while (!resource && numRetries <= this.maxRetries) {\n      try {\n        resource = await fun();\n      } catch (err) {\n        // console.log(err);\n        numRetries++;\n        await this._wait(this.retryDelay);\n      }\n    }\n    return resource;\n  };\n}\n\nexport default EosClient;\n","import {\n  REQUEST_BLOCKS, RECEIVED_BLOCK, DONE_FETCHING_BLOCKS, SET_TOTAL_BLOCKS,\n  REQUEST_DETAILS, RECEIVED_DETAIL, TOGGLE_DETAILS,\n} from '../actions';\n\nconst initialState = {\n  totalBlocks: 10,\n  isFetchingBlocks: false,\n  blocks: [],\n  blocksById: {},\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n\n    // When requesting new blocks, reset the blocks and set isFetchingBlocks to true\n    case REQUEST_BLOCKS:\n      return {\n        ...state,\n        blocks: [],\n        blocksById: {},\n        isFetchingBlocks: true,\n      };\n\n    // When we receive a new block, append it to blocks and update blocksById\n    case RECEIVED_BLOCK: {\n      const { block } = action;\n      const blocks = [...state.blocks, block.id];\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocks, blocksById };\n    }\n\n    // After we finish fetching the blocks, set isFetchingBlocks to false\n    case DONE_FETCHING_BLOCKS:\n      return { ...state, isFetchingBlocks: false };\n\n    case SET_TOTAL_BLOCKS:\n      return { ...state, totalBlocks: action.totalBlocks };\n\n    // When details are request for a block, set isFetchingDetails to true for that block\n    case REQUEST_DETAILS: {\n      const { blockId } = action;\n      const block = {\n        ...state.blocksById[blockId],\n        isFetchingDetails: true,\n      };\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocksById };\n    }\n\n    // When we receive block action details, update the corresponding contract\n    case RECEIVED_DETAIL: {\n      const { blockId, actionIdx, contract } = action;\n      const oldBlock = state.blocksById[blockId];\n      const oldActions = oldBlock.actions;\n      const newAction = { ...oldActions[actionIdx], contract };\n      const actions = [\n        ...oldActions.slice(0, actionIdx),\n        newAction,\n        ...oldActions.slice(actionIdx + 1),\n      ];\n      const block = { ...oldBlock, actions };\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocksById };\n    }\n\n    // Toggle the showDetails field for the block\n    case TOGGLE_DETAILS: {\n      const { blockId } = action;\n      const oldBlock = state.blocksById[blockId];\n      const block = {\n        ...oldBlock,\n        showDetails: !oldBlock.showDetails,\n      };\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocksById };\n    }\n\n    // Should never get here, but just to be safe, return the current state\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { JsonRpc } from 'eosjs';\nimport App from './containers/App';\nimport EosClient from './util/eos-client';\nimport reducer from './reducers';\nimport './index.css';\nimport config from './config';\n\n// Inject a store and eosClient into the app\n\nconst rpc = new JsonRpc(config.eosApiUrl);\nconst eosClient = new EosClient({ rpc });\nconst store = createStore(reducer);\n\nrender(\n  <Provider store={store}>\n    <App eosClient={eosClient} />\n  </Provider>,\n  document.getElementById('root'),\n);\n","\nexport default {\n  eosApiUrl: 'https://api.eosnewyork.io',\n};\n"],"sourceRoot":""}