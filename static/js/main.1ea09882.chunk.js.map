{"version":3,"sources":["actions/index.js","components/BlockEntry.js","components/BlockView.js","containers/Block.js","components/Blockchain.js","components/AppView.js","containers/App.js","util/eos-client.js","reducers/index.js","index.js","config.js"],"names":["receivedBlock","block","type","receivedDetail","blockId","actionIdx","contract","toggleDetails","setTotalBlocks","totalBlocks","fetchBlocks","args","a","dispatch","isFetchingBlocks","eosClient","i","prevBlock","getPrevBlock","requestBlocks","md","MarkdownIt","renderContract","data","render","Mustache","err","console","log","fetchDetails","actions","isFetchingDetails","length","action","getAbi","account","abi","contracts","name","renderedContract","id","requestDetails","BlockEntry","props","label","value","onClick","labelElem","className","valueElem","BlockView","prevProps","this","prevShowDetails","showDetails","key","actionBlocks","map","dangerouslySetInnerHTML","__html","hideDetailsLink","details","timestamp","Component","connect","state","ownProps","blocksById","bindActionCreators","Blockchain","blocks","rows","Block","spinner","alt","src","AppView","disabled","onChange","e","parseInt","target","EosClient","previous","getInfo","info","head_block_id","getBlock","_processBlock","_retry","rpc","get_info","get_block","abiCache","get_abi","forEach","ricardian_contract","transactions","t","trx","transaction","push","_wait","ms","Promise","resolve","setTimeout","fun","numRetries","resource","maxRetries","retryDelay","defaults","apiUrl","Object","assign","JsonRpc","initialState","reducer","oldBlock","oldActions","newAction","slice","store","createStore","App","document","getElementById"],"mappings":"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","file":"static/js/main.1ea09882.chunk.js","sourcesContent":["import Mustache from 'mustache';\nimport MarkdownIt from 'markdown-it';\n\nexport const RECEIVED_BLOCK = 'RECEIVED_BLOCK';\nexport const REQUEST_BLOCKS = 'REQUEST_BLOCKS';\nexport const DONE_FETCHING_BLOCKS = 'DONE_FETCHING_BLOCKS';\nexport const REQUEST_DETAILS = 'REQUEST_DETAILS';\nexport const RECEIVED_DETAIL = 'RECEIVED_DETAIL';\nexport const TOGGLE_DETAILS = 'TOGGLE_DETAILS';\nexport const SET_TOTAL_BLOCKS = 'SET_TOTAL_BLOCKS';\n\nexport const receivedBlock = (block) => ({\n  type: RECEIVED_BLOCK,\n  block,\n});\n\nexport const doneBlocks = () => ({\n  type: DONE_FETCHING_BLOCKS,\n});\n\nexport const receivedDetail = (blockId, actionIdx, contract) => ({\n  type: RECEIVED_DETAIL,\n  blockId,\n  actionIdx,\n  contract,\n});\n\nexport const toggleDetails = (blockId) => ({\n  type: TOGGLE_DETAILS,\n  blockId,\n});\n\nexport const setTotalBlocks = (totalBlocks) => ({\n  type: SET_TOTAL_BLOCKS,\n  totalBlocks,\n});\n\nconst fetchBlocks = async (args) => {\n  const { dispatch, isFetchingBlocks, totalBlocks, eosClient } = args;\n  if (!isFetchingBlocks) {\n    let prevBlock;\n    for (let i = 0; i < totalBlocks; i++) {\n      const block = prevBlock;\n      prevBlock = await eosClient.getPrevBlock(block);\n      dispatch(receivedBlock(prevBlock));\n    }\n    dispatch(doneBlocks());\n  }\n};\n\nexport const requestBlocks = (args) => {\n  fetchBlocks(args);\n  return { type: REQUEST_BLOCKS };\n};\n\nconst md = new MarkdownIt();\n\nconst renderContract = (contract, data) => {\n  try {\n    return md.render(Mustache.render(contract, data));\n  } catch (err) {\n    console.log('ERROR: failed to render contract');\n    console.log(err);\n    return '';\n  }\n};\n\nconst fetchDetails = async (dispatch, block, eosClient) => {\n  const { actions, isFetchingDetails } = block;\n  if (isFetchingDetails) return;\n\n  for (let i = 0; i < actions.length; i++) {\n    const action = actions[i];\n    if (action.contract) continue;\n    const abi = await eosClient.getAbi(action.account);\n    const contract = abi.contracts[action.name];\n    if (contract) {\n      action.contract = renderContract(contract, action.data);\n      const renderedContract = renderContract(contract, action.data);\n      dispatch(receivedDetail(block.id, i, renderedContract));\n    }\n  }\n};\n\nexport const requestDetails = (dispatch, block, eosClient) => {\n  fetchDetails(dispatch, block, eosClient);\n  return {\n    type: REQUEST_DETAILS,\n    blockId: block.id,\n  };\n};\n","import React from 'react';\n\nfunction BlockEntry(props) {\n  const { label, value, onClick } = props;\n  let labelElem = (\n    <span className=\"eos-label\">\n      {label}\n      :\n    </span>\n  );\n  let valueElem = (\n    <span className=\"eos-value\">\n      {value}\n    </span>\n  );\n  if (onClick) {\n    labelElem = (\n      <button type=\"button\" className=\"link-button\" onClick={onClick}>\n        {labelElem}\n      </button>\n    );\n    valueElem = (\n      <button type=\"button\" className=\"link-button\" onClick={onClick}>\n        {valueElem}\n      </button>\n    );\n  }\n  return (\n    <div>\n      <div className=\"eos-label\">{labelElem}</div>\n      {valueElem}\n    </div>\n  );\n}\n\nexport default BlockEntry;\n","import React, { Component } from 'react';\nimport BlockEntry from './BlockEntry';\n\nclass BlockView extends Component {\n  componentDidUpdate(prevProps) {\n    const { dispatch, block, eosClient, requestDetails } = this.props;\n    const prevShowDetails = prevProps.block.showDetails;\n    const { showDetails } = this.props.block;\n    if ((prevShowDetails !== showDetails) && showDetails) {\n      requestDetails(dispatch, block, eosClient);\n    }\n  }\n\n  render() {\n    const { block, toggleDetails } = this.props;\n\n    let key = 0;\n    const actionBlocks = block.actions.map((action) => (\n      <div className=\"eos-block\" key={++key}>\n        <BlockEntry label=\"action\" value={action.name} />\n        <BlockEntry label=\"account\" value={action.account} />\n        <BlockEntry label=\"contract\" />\n        <div className=\"contract\" dangerouslySetInnerHTML={{ __html: action.contract }} />\n      </div>\n    ));\n\n    const hideDetailsLink = (\n      <button type=\"button\" className=\"link-button\" onClick={() => toggleDetails(block.id)}>\n        hide actions\n      </button>\n    );\n\n    const details = (\n      <div className=\"eos-details\">\n        {hideDetailsLink}\n        {actionBlocks}\n        {hideDetailsLink}\n      </div>\n    );\n\n    return (\n      <div>\n        <div className=\"eos-block\">\n          <BlockEntry label=\"hash\" value={block.id} />\n          <BlockEntry label=\"timestamp\" value={block.timestamp} />\n          <BlockEntry\n            label=\"actions\"\n            value={block.actions.length}\n            onClick={() => toggleDetails(block.id)}\n          />\n        </div>\n        {block.showDetails && details}\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default BlockView;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { requestDetails, toggleDetails } from '../actions';\nimport BlockView from '../components/BlockView';\n\nconst mapStateToProps = (state, ownProps) => {\n  const { blocksById } = state;\n  const { block } = ownProps;\n  return { block: blocksById[block.id] };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  const actionCreators = bindActionCreators({ toggleDetails, requestDetails }, dispatch);\n  return { ...actionCreators, dispatch };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BlockView);\n","import React from 'react';\nimport Block from '../containers/Block';\n\nfunction Blockchain(props) {\n  const { blocks, blocksById, eosClient, isFetchingBlocks } = props;\n  const rows = blocks.map((id) => (\n    <Block block={blocksById[id]} key={id} eosClient={eosClient} />\n  ));\n\n  const spinner = (\n    <div className=\"spinner-container\">\n      <img alt=\"spinner\" className=\"spinner\" src=\"spinner.gif\" />\n    </div>\n  );\n\n  return (\n    <div className=\"eos-blockchain\">\n      <hr />\n      <div>\n        {rows}\n      </div>\n      {isFetchingBlocks && spinner}\n    </div>\n  );\n}\n\nexport default Blockchain;\n","import React, { Component } from 'react';\nimport Blockchain from './Blockchain';\n\nclass AppView extends Component {\n  componentDidMount() {\n    const { requestBlocks } = this.props;\n    requestBlocks(this.props);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { requestBlocks } = this.props;\n    if (prevProps.totalBlocks !== this.props.totalBlocks) {\n      requestBlocks(this.props);\n    }\n  }\n\n  render() {\n    const {\n      blocks,\n      blocksById,\n      eosClient,\n      isFetchingBlocks,\n      setTotalBlocks,\n      totalBlocks,\n      requestBlocks,\n      dispatch,\n    } = this.props;\n\n    return (\n      <div className=\"container\">\n        <h1 className=\"app-title\">EOSIO Blockchain</h1>\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={() => requestBlocks({ ...this.props, dispatch })}\n          disabled={isFetchingBlocks}\n        >\n          LOAD\n        </button>\n        <select\n          value={totalBlocks}\n          onChange={(e) => setTotalBlocks(parseInt(e.target.value, 10))}\n          disabled={isFetchingBlocks}\n          className=\"load\"\n        >\n          <option value=\"1\">1</option>\n          <option value=\"2\">2</option>\n          <option value=\"5\">5</option>\n          <option value=\"10\">10</option>\n          <option value=\"15\">15</option>\n          <option value=\"20\">20</option>\n          <option value=\"25\">25</option>\n        </select>\n        blocks\n\n        <Blockchain\n          blocks={blocks}\n          blocksById={blocksById}\n          eosClient={eosClient}\n          isFetchingBlocks={isFetchingBlocks}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default AppView;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { requestBlocks, setTotalBlocks } from '../actions';\nimport AppView from '../components/AppView';\n\nconst mapStateToProps = (state) => state;\n\nconst mapDispatchToProps = (dispatch) => {\n  const actionCreators = bindActionCreators({ requestBlocks, setTotalBlocks }, dispatch);\n  return { ...actionCreators, dispatch };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppView);\n","import { JsonRpc } from 'eosjs';\n\nclass EosClient {\n  constructor(args = {}) {\n    const defaults = {\n      apiUrl: 'https://api.eosnewyork.io',\n      abiCache: {},\n      retryDelay: 1000,\n      maxRetries: 10,\n    };\n    Object.assign(this, defaults, args);\n\n    if (!this.rpc) {\n      this.rpc = new JsonRpc(this.apiUrl);\n    }\n  }\n\n  getPrevBlock = async (block) => {\n    let blockId;\n    if (block) {\n      blockId = block.previous;\n    } else {\n      const info = await this.getInfo();\n      blockId = info.head_block_id;\n    }\n    const prevBlock = await this.getBlock(blockId);\n    prevBlock.actions = [];\n    this._processBlock(prevBlock);\n    return prevBlock;\n  }\n\n  getInfo = async () => this._retry(() => this.rpc.get_info());\n\n  getBlock = async (blockId) => this._retry(() => this.rpc.get_block(blockId));\n\n  getAbi = async (account) => {\n    if (this.abiCache[account]) return this.abiCache[account];\n    const abi = await this._retry(async () => this.rpc.get_abi(account));\n    abi.contracts = {};\n    if (abi.abi) {\n      abi.abi.actions.forEach((action) => {\n        abi.contracts[action.name] = action.ricardian_contract;\n      });\n    }\n    this.abiCache[account] = abi;\n    return abi;\n  };\n\n  _processBlock = (block) => {\n    block.actions = [];\n    block.transactions.forEach((t) => {\n      if (typeof t.trx === 'object') {\n        const { actions } = t.trx.transaction;\n        block.actions.push(...actions);\n      }\n    });\n  };\n\n  _wait = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\n\n  _retry = async (fun) => {\n    let numRetries = 0;\n    let resource;\n    while (!resource && numRetries <= this.maxRetries) {\n      try {\n        resource = await fun();\n      } catch (err) {\n        // console.log(err);\n        numRetries++;\n        await this._wait(this.retryDelay);\n      }\n    }\n    return resource;\n  };\n}\n\nexport default EosClient;\n","import {\n  REQUEST_BLOCKS, RECEIVED_BLOCK, DONE_FETCHING_BLOCKS, SET_TOTAL_BLOCKS,\n  REQUEST_DETAILS, RECEIVED_DETAIL, TOGGLE_DETAILS,\n} from '../actions';\n\nconst initialState = {\n  totalBlocks: 10,\n  isFetchingBlocks: false,\n  blocks: [],\n  blocksById: {},\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    // When requesting new blocks, reset the blocks and set isFetchingBlocks to true\n    case REQUEST_BLOCKS:\n      return {\n        ...state,\n        blocks: [],\n        blocksById: {},\n        isFetchingBlocks: true,\n      };\n\n    // When we receive a new block, append it to blocks and update blocksById\n    case RECEIVED_BLOCK: {\n      const { block } = action;\n      const blocks = [...state.blocks, block.id];\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocks, blocksById };\n    }\n\n    // After we finish fetching the blocks, set isFetchingBlocks to false\n    case DONE_FETCHING_BLOCKS:\n      return { ...state, isFetchingBlocks: false };\n\n    case SET_TOTAL_BLOCKS:\n      return { ...state, totalBlocks: action.totalBlocks };\n\n    // When details are request for a block, set isFetchingDetails to true for that block\n    case REQUEST_DETAILS: {\n      const { blockId } = action;\n      const block = {\n        ...state.blocksById[blockId],\n        isFetchingDetails: true,\n      };\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocksById };\n    }\n\n    // When we receive block action details, update the corresponding contract\n    case RECEIVED_DETAIL: {\n      const { blockId, actionIdx, contract } = action;\n      const oldBlock = state.blocksById[blockId];\n      const oldActions = oldBlock.actions;\n      const newAction = { ...oldActions[actionIdx], contract };\n      const actions = [\n        ...oldActions.slice(0, actionIdx),\n        newAction,\n        ...oldActions.slice(actionIdx + 1),\n      ];\n      const block = { ...oldBlock, actions };\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocksById };\n    }\n\n    // Toggle the showDetails field for the block\n    case TOGGLE_DETAILS: {\n      const { blockId } = action;\n      const oldBlock = state.blocksById[blockId];\n      const block = {\n        ...oldBlock,\n        showDetails: !oldBlock.showDetails,\n      };\n      const blocksById = {\n        ...state.blocksById,\n        [block.id]: block,\n      };\n      return { ...state, blocksById };\n    }\n\n    // Should never get here, but just to be safe, return the current state\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { JsonRpc } from 'eosjs';\nimport App from './containers/App';\nimport EosClient from './util/eos-client';\nimport reducer from './reducers';\nimport './index.css';\nimport config from './config';\n\n// Inject a store and eosClient into the app\n\nconst rpc = new JsonRpc(config.eosApiUrl);\nconst eosClient = new EosClient({ rpc });\nconst store = createStore(reducer);\n\nrender(\n  <Provider store={store}>\n    <App eosClient={eosClient} />\n  </Provider>,\n  document.getElementById('root'),\n);\n","\nexport default {\n  eosApiUrl: 'https://api.eosnewyork.io',\n};\n"],"sourceRoot":""}